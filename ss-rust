#!/bin/bash
set -e

CONFIG_DIR="/etc/shadowsocks-rust"
NODES_LIST="$CONFIG_DIR/nodes.list"

# 检查 root 权限
if [ "$EUID" -ne 0 ]; then
    echo "❌ 请以 root 用户运行此脚本"
    exit 1
fi

# 优化后的依赖安装函数
install_dependencies() {
    local MISSING=()
    declare -A pkg_commands=(
        ["curl"]="curl"
        ["jq"]="jq"
        ["xz-utils"]="xz"
        ["openssl"]="openssl"
        ["net-tools"]="ifconfig"
    )

    for pkg in "${!pkg_commands[@]}"; do
        if ! command -v "${pkg_commands[$pkg]}" &>/dev/null; then
            MISSING+=("$pkg")
        fi
    done

    if (( ${#MISSING[@]} > 0 )); then
        echo "🔧 检测到以下依赖缺失：${MISSING[*]}"
        apt update -y
        apt install -y --no-install-recommends "${MISSING[@]}"
    else
        echo "ℹ️ 所有依赖已安装，无需更新"
    fi
}

# 创建 Shadowsocks 节点
create_node() {
    echo
    read -p "请输入节点名称（可留空自动生成）：" NODE_NAME
    if [[ -z "$NODE_NAME" ]]; then
        NODE_NAME="node$(date +%s | tail -c 3)"
        echo "ℹ️ 自动生成节点名称：$NODE_NAME"
    fi
    CONFIG_FILE="${CONFIG_DIR}/node-${NODE_NAME}.json"
    SERVICE_NAME="shadowsocks-rust-${NODE_NAME}"

    if [[ -f "$CONFIG_FILE" ]]; then
        echo "⚠️ 节点 $NODE_NAME 已存在"
        return
    fi

    mkdir -p "$CONFIG_DIR"
    chmod 700 "$CONFIG_DIR"

    install_dependencies

    # 随机端口
    for i in {1..10}; do
        PORT=$((RANDOM % 10000 + 10000))
        ss -tuln | grep -q ":$PORT\b" || break
    done

    PASSWORD=$(openssl rand -base64 12)
    METHOD="aes-256-gcm"
    LISTEN_ADDR="::"

    # 下载 Shadowsocks-Rust（二进制）只一次
    if ! command -v ssserver &>/dev/null; then
        echo "📥 安装 Shadowsocks-Rust..."
        ARCH=$(uname -m)
        case "$ARCH" in
            x86_64) FILE="x86_64-unknown-linux-gnu.tar.xz" ;;
            aarch64) FILE="aarch64-unknown-linux-gnu.tar.xz" ;;
            *) echo "❌ 不支持架构 $ARCH" && exit 1 ;;
        esac

        TMPDIR=$(mktemp -d)
        cd "$TMPDIR"
        RELEASE=$(curl -s https://api.github.com/repos/shadowsocks/shadowsocks-rust/releases/latest)
        URL=$(echo "$RELEASE" | jq -r ".assets[] | select(.name | test(\"$FILE\")) | .browser_download_url")
        curl -L "$URL" -o ss.tar.xz
        tar -xf ss.tar.xz
        install ssserver sslocal ssmanager /usr/local/bin/
        cd ~ && rm -rf "$TMPDIR"
    fi

    # 写配置
    cat > "$CONFIG_FILE" <<EOF
{
    "server": "$LISTEN_ADDR",
    "server_port": $PORT,
    "password": "$PASSWORD",
    "method": "$METHOD",
    "mode": "tcp_and_udp"
}
EOF
    chmod 600 "$CONFIG_FILE"

    # 写服务
    cat > "/etc/systemd/system/${SERVICE_NAME}.service" <<EOF
[Unit]
Description=Shadowsocks Rust Server ($NODE_NAME)
After=network.target

[Service]
ExecStart=/usr/local/bin/ssserver -c $CONFIG_FILE
Restart=always

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable --now "$SERVICE_NAME"

    # 获取公网 IP
    IP=$(curl -s https://api.ipify.org || curl -s https://ifconfig.me)

    # 显示连接信息
    ENCODED=$(echo -n "$METHOD:$PASSWORD@$IP:$PORT" | base64)
    echo "$NODE_NAME $PORT $PASSWORD $METHOD" >> "$NODES_LIST"

    echo -e "\n✅ Shadowsocks-Rust 节点已部署成功"
    echo "📎 链接: ss://${ENCODED}#${NODE_NAME}"
}

# 删除 Shadowsocks 节点
delete_node() {
    while true; do
        echo
        declare -a NODES
        if [[ -f "$NODES_LIST" ]]; then
            mapfile -t NODES < <(cut -d ' ' -f1 "$NODES_LIST")
        else
            mapfile -t NODES < <(find "$CONFIG_DIR" -name 'node-*.json' -exec basename {} \; | sed 's/^node-//;s/\.json$//')
        fi

        if [[ ${#NODES[@]} -eq 0 ]]; then
            echo "✅ 当前已无可删除的 Shadowsocks 节点，返回主菜单。"
            return
        fi

        echo "📋 当前可删除的节点："
        for i in "${!NODES[@]}"; do
            printf "  %2d) %s\n" $((i+1)) "${NODES[$i]}"
        done
        echo "   0) 返回主菜单"
        read -p "请选择要删除的节点编号：" ID

        if [[ "$ID" == "0" ]]; then
            return
        elif [[ "$ID" =~ ^[0-9]+$ ]] && (( ID >= 1 && ID <= ${#NODES[@]} )); then
            NODE="${NODES[$((ID-1))]}"
            echo "🧹 正在删除节点 $NODE..."
            systemctl stop "shadowsocks-rust-$NODE" || true
            systemctl disable "shadowsocks-rust-$NODE" || true
            rm -f "/etc/systemd/system/shadowsocks-rust-${NODE}.service"
            rm -f "$CONFIG_DIR/node-${NODE}.json"
            [[ -f "$NODES_LIST" ]] && sed -i "/^$NODE /d" "$NODES_LIST"
            systemctl daemon-reload
            echo "✅ 节点 $NODE 已删除"
        else
            echo "❌ 无效编号"
        fi
    done
}

# 主菜单循环
while true; do
    echo -e "\n🧭 Shadowsocks-Rust 管理菜单"
    echo "1) 创建 Shadowsocks 节点"
    echo "2) 删除 Shadowsocks 节点"
    echo "0) 退出"
    read -p "请输入操作编号：" CHOICE
    case "$CHOICE" in
        1) create_node ;;
        2) delete_node ;;
        0) echo "👋 再见！"; exit 0 ;;
        *) echo "❌ 无效选项" ;;
    esac
done
